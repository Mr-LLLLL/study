// Code generated by MockGen. DO NOT EDIT.
// Source: ./main.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIn is a mock of In interface.
type MockIn struct {
	ctrl     *gomock.Controller
	recorder *MockInMockRecorder
}

// MockInMockRecorder is the mock recorder for MockIn.
type MockInMockRecorder struct {
	mock *MockIn
}

// NewMockIn creates a new mock instance.
func NewMockIn(ctrl *gomock.Controller) *MockIn {
	mock := &MockIn{ctrl: ctrl}
	mock.recorder = &MockInMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIn) EXPECT() *MockInMockRecorder {
	return m.recorder
}

// Print mocks base method.
func (m *MockIn) Print() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Print")
}

// Print indicates an expected call of Print.
func (mr *MockInMockRecorder) Print() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Print", reflect.TypeOf((*MockIn)(nil).Print))
}
